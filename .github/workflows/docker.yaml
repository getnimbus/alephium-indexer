#name: Docker
#
## This workflow uses actions that are not certified by GitHub.
## They are provided by a third-party and are governed by
## separate terms of service, privacy policy, and support
## documentation.
#
#on:
#  push:
#    branches: [ "main" ]
#    # Publish semver tags as releases.
#    tags: [ "v*.*.*" ]
#    paths: [ "cmd/**", "internal/**", "pkg/**", ".github/workflows/**" ]
#  # pull_request:
#  #   branches: [ "main" ]
#
#env:
#  # Use docker.io for Docker Hub if empty
#  REGISTRY: ghcr.io
#  # github.repository as <account>/<repo>
#  IMAGE_NAME: ${{ github.repository }}
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    timeout-minutes: 20
#    permissions:
#      contents: read
#      packages: write
#      # This is used to complete the identity challenge
#      # with sigstore/fulcio when running outside of PRs.
#      id-token: write
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#
#      # Workaround: https://github.com/docker/build-push-action/issues/461
#      - name: Setup Docker buildx
#        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf
#
#      # Login against a Docker registry except on PR
#      # https://github.com/docker/login-action
#      - name: Log into registry ${{ env.REGISTRY }}
#        if: github.event_name != 'pull_request'
#        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      # Extract metadata (tags, labels) for Docker
#      # https://github.com/docker/metadata-action
#      - name: Extract Docker metadata
#        id: meta
#        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
#        with:
#          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#          tags: |
#            type=sha
#
#      # Build and push Docker image with Buildx (don't push on PR)
#      # https://github.com/docker/build-push-action
#      - name: Build and push Docker image
#        id: build-and-push
#        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
#        with:
#          context: .
#          target: production
#          platform: linux/amd64,linux/arm64
#          push: ${{ github.event_name != 'pull_request' }}
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#          cache-from: type=gha
#          cache-to: type=gha,mode=max
#
##      # Deploy app
##      - name: Deploy master to CapRover
##        uses: caprover/deploy-from-github@main
##        with:
##          server: "${{ secrets.CAPROVER_SERVER }}"
##          app: "${{ secrets.APP_MASTER_NAME }}"
##          token: "${{ secrets.APP_MASTER_TOKEN }}"
##          image: "${{ steps.meta.outputs.tags }}"
##
#      - name: Deploy worker to CapRover
#        uses: caprover/deploy-from-github@main
#        with:
#          server: "${{ secrets.CAPROVER_SERVER }}"
#          app: "${{ secrets.APP_WORKER_NAME }}"
#          token: "${{ secrets.APP_WORKER_TOKEN }}"
#          image: "${{ steps.meta.outputs.tags }}"
#
#      # Send discord notification
#      - name: Discord notification
#        env:
#          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
#        uses: Ilshidur/action-discord@0.3.2
#        with:
#          args: "Built new image `alephium-indexer` at `${{ steps.meta.outputs.tags }}` commit `${{ github.event.head_commit.message }}`"